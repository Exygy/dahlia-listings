/ `income` == $scope.income in the case of addInitial and addAdditional
/ `income` == passed in income (income in incomeSources) when it's the edit form
ng-form name="forms.incomeForm_{{income.id}}" ng-init="income.id = income.id || nextId()"

  header.padding.border-bottom.text-center ng-if="noIncomeSources()"
    h2.t-base.t-alt-sans.t-caps.t-black
      | Add an income source:

  .form-group.padding-top--2x
    label.form-label for="source_{{income.id}}" ng-class="{ error: inputInvalid(income.id, 'source') }"
      | Where is this income from?
    select id="source_{{income.id}}" ng-model="income.source" name="source_{{income.id}}" required="" ng-class="{ error: inputInvalid(income.id, 'source') }" aria-describedby="source_{{income.id}}_error"
      option disabled="" selected="" value=""  Please select one
      option value="Wages"  Wages
      option value="Social Security"  Social Security
      option value="Disability"  Disability
      option value="Unemployment"  Unemployment
      option value="Calworks"  CalWorks
      option value="Other"  Other
    small.error id="source_{{income.id}}_error" ng-show="inputInvalid(income.id, 'source')"
      | Please enter an income source

  .form-group
    label.form-label for="value_{{income.id}}" ng-class="{ error: inputInvalid(income.id, 'value') || inputInvalid(income.id, 'frequency') }"
      | How much is the income of this source?
    .form-income
      span.label-dollar $
      input.form-income_input id="value_{{income.id}}" placeholder="Enter amount" type="text" ng-model="income.value" ng-currency="" currency-symbol="" name="value_{{income.id}}" required="" ng-class="{ error: inputInvalid(income.id, 'value') || inputInvalid(income.id, 'frequency_'+income.id) }" aria-describedby="value_{{income.id}}_error"
      small.error id="value_{{income.id}}_error" ng-show="inputInvalid(income.id, 'value')"
          | Please enter an income amount
    .radio-group-inline ng-class="{ error: inputInvalid(income.id, 'frequency') }"
      p.radio-inline
        / `::$id` is a "one-time binding" of $id
        / see: https://docs.angularjs.org/guide/expression
        input id="income_frequency_month_{{income.id}}" name="frequency_{{income.id}}" type="radio" value="month" ng-model="income.frequency" required="" aria-describedby="frequency_{{income.id}}_error"
        label for="income_frequency_month_{{income.id}}"  per month
      p.radio-inline
        input id="income_frequency_year_{{income.id}}" name="frequency_{{income.id}}" type="radio" value="year" ng-model="income.frequency" required="" aria-describedby="frequency_{{income.id}}_error"
        label for="income_frequency_year_{{income.id}}"  per year

      small.error id="frequency_{{income.id}}_error" ng-show="inputInvalid(income.id, 'frequency_'+income.id)"
        | Please enter an income frequency

.button-stack--paginate.row
  / show this button for the initial form (we don't have income sources)
  .row.padding-top--2x.show-for-small-only ng-if="noIncomeSources()"
  .small-6.columns ng-if="noIncomeSources()"
    button.button-link.button-lined title="Cancel" ui-sref="dahlia.eligibility-estimator"
      | Cancel
  .small-6.columns ng-if="noIncomeSources()"
    button.primary.right.no-margin title="Save" ng-click="addAdditionalIncome()" Save

  / show this button if we're on the additional income form
  .form-group.text-center.border-top.padding-top ng-if="$index == undefined && hasIncomeSources()"
    button.ghost-white.expand-small.no-margin title="Save Income Source" ng-click="addAdditionalIncome()" Save Income Source

  / show these buttons if we're iterating over income list (better way to check?)
  .small-6.medium-6.columns ng-if="$index != undefined"
    button.button-link.button-lined title="Delete" type="button" ng-click="deleteIncome(income)" Delete
  .small-6.medium-6.columns ng-if="$index != undefined"
    button.ghost-white.right title="Save" type="button" ng-click="cleanValue(income);toggleIncomeEditForm(income);" ng-disabled="form(income.id).$invalid"
      | Save
